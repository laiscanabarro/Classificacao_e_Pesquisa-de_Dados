# -*- coding: utf-8 -*-
"""lab02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pj0R6kSNUuh_jtDpD5zMP9ZaulsJANK4

# Lab 02 - CPD

Beatriz Forneck Soviero - 00342227
La√≠s Fernanda Canabarro Araujo - 00342115
"""

from math import floor
def mediana3(lista,inicio,fim):
  l = [lista[inicio], lista[fim],lista[floor((inicio+fim)/2)]]
  if l[0] <= l[1] and l[1] <= l[2]: return fim;
  elif l[2] <= l[1] and l[1] <= l[0]: return fim;
  elif l[0] <= l[2] and l[2] <= l[1]: return floor((inicio+fim)/2);
  elif l[1] <= l[2] and l[2] <= l[0]: return floor((inicio+fim)/2);
  return inicio

from random import randint

def aleatorio(lista,inicio,fim):
  return randint(inicio,fim)

def lomuto(lista,inicio,fim,part):

  p = part(lista,inicio,fim)

  global swaps

  swaps += 1
  lista[p],lista[inicio] = lista[inicio],lista[p]
  pivot = lista[inicio]

  i = inicio + 1
  for j in range(inicio+1,fim+1):
    if lista[j] < pivot:

      swaps += 1
      lista[j], lista[i] = lista[i], lista[j]
      i += 1

  swaps += 1
  lista[inicio],lista[i-1] = lista[i-1],lista[inicio]

  return i - 1

def hoare(lista,inicio,fim,part):

  p = part(lista,inicio,fim)

  global swaps

  swaps += 1
  lista[p],lista[inicio] = lista[inicio],lista[p]
  pivot = lista[inicio]

  i = inicio
  j = fim

  while(i<j):
    while(lista[j] > pivot and i < j): j-= 1;
    swaps += 1
    lista[i] = lista[j]
    while(lista[i] <= pivot and i < j): i += 1;
    lista[j] = lista[i]

  lista[j] = pivot
  return i

def quicksort(lista,part,modo,inicio,fim):
  global recursoes
  recursoes += 1
  if inicio < fim:
    pos = modo(lista,inicio,fim,part)
    quicksort(lista,part,modo,inicio, pos-1)
    quicksort(lista,part,modo,pos+1,fim)

import time

def cronometro(vetor, part, modo, tam):
  global recursoes
  global swaps
  swaps = 0
  recursoes = 0
  inicio = time.time()
  quicksort(vetor,part,modo,0,tam - 1)
  fim = time.time()

  return (fim - inicio) * 1000

"""### Testes"""

def estatisticas(lista, tamanho, part, modo):
  if part == mediana3 and modo == hoare:
    saida = open('stats-mediana-hoare.txt', 'a')
  elif part == mediana3 and modo == lomuto:
    saida = open('stats-mediana-lomuto.txt', 'a')
  elif modo == hoare:
    saida = open('stats-aleatorio-hoare.txt', 'a')
  else:
    saida = open('stats-aleatorio-lomuto.txt', 'a')

  tempo = cronometro(lista,part,modo,tamanho)
  saida.write(f'TAMANHO ENTRADA {tamanho}\n')
  saida.write(f'SWAPS {swaps}\n')
  saida.write(f'RECURSOES {recursoes}\n')
  saida.write(f'TEMPO {tempo}\n')

  saida.close()

swaps = recursoes = 0
lista = []
arquivo = open('/entrada-quicksort.txt', 'r')
linhas = arquivo.readlines()

for linha in linhas:
  lista = [int(numero) for numero in linha.split()]
  tamanho = lista[0]
  del lista[0]

  aux = list(lista)
  estatisticas(lista,tamanho, mediana3,lomuto)

  lista = list(aux)
  estatisticas(lista,tamanho,mediana3,hoare)

  lista = list(aux)
  estatisticas(lista,tamanho,aleatorio,lomuto)

  lista = list(aux)
  estatisticas(lista,tamanho,aleatorio,hoare)

arquivo.close()